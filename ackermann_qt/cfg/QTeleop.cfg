#! /usr/bin/env python
#*
#*  Copyright (c) 2011 Austin Robot Technology
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the author nor the names of other
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# joystick teleop node dynamic configuration
# $Id$

PACKAGE='ackermann_qt'
import roslib; roslib.load_manifest(PACKAGE)

import math
from dynamic_reconfigure.parameter_generator_catkin import *

# only includes parameters reconfigurable while running
RECONFIGURE_RUNNING = 1

gen = ParameterGenerator()

#       Name, Type, Reconfiguration level, Description, Default, Min, Max

gen.add("epsilon_steering", double_t, RECONFIGURE_RUNNING,
        "Smallest steering change recognized (radians).", math.radians(0.001), 0.0, 0.1)

gen.add("limit_forward", double_t, RECONFIGURE_RUNNING,
        "Maximum speed requested going forward (m/s).", 2.0, 0.0, 3.0)

gen.add("limit_reverse", double_t, RECONFIGURE_RUNNING,
        "Maximum speed requested in reverse (m/s).", 2.0, 0.0, 3.0)

gen.add("max_steering", double_t, RECONFIGURE_RUNNING,
        "Maximum (left) steering limit (radians).", math.radians(19.0), 0.1, math.pi/2.0)

exit(gen.generate(PACKAGE, "qteleop.py", "QTeleop"))
